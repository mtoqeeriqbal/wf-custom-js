{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/finsweet.ts", "../src/utils/simplemap.ts", "../src/utils/states.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Initializes Finsweet Attributes and defines the global filterByState function.\n */\n\n// Extend the Window interface to include FinsweetAttributes\ndeclare global {\n  interface Window {\n    FinsweetAttributes: [string, () => void][];\n  }\n}\nexport const initializeFinsweetAttributes = () => {\n  window.FinsweetAttributes.push([\n    'list',\n    () => {\n      // Define the global function\n      window.filterByState = function (stateValue: string) {\n        const dropdown = document.querySelector('[fs-list-field=\"state\"]') as HTMLInputElement;\n\n        if (!dropdown) {\n          return;\n        }\n\n        // Set value\n        dropdown.value = stateValue; // Set the value for the dropdown\n\n        // Trigger Finsweet filters\n        dropdown.dispatchEvent(new Event('input', { bubbles: true }));\n        dropdown.dispatchEvent(new Event('change', { bubbles: true }));\n      };\n    },\n  ]);\n};\n", "/**\n * Extends the Window interface to include the filterByState property.\n */\ndeclare global {\n  interface Window {\n    filterByState?: (stateName: string) => void;\n  }\n}\n\n/**\n * Initializes the SimpleMap hook for zoomable click state functionality.\n */\n// Ensure simplemaps_usmap is declared or imported\ndeclare const simplemaps_usmap: {\n  hooks: {\n    zoomable_click_state: (id: string) => boolean;\n  };\n};\n\nexport const initializeSimpleMap = () => {\n  simplemaps_usmap.hooks.zoomable_click_state = function (id: string) {\n    // Ensure simplemaps_usmap_mapdata is defined or imported\n    interface SimpleMapsData {\n      state_specific: {\n        [key: string]: {\n          name?: string;\n        };\n      };\n    }\n\n    const simplemapsData = (window as unknown as { simplemaps_usmap_mapdata?: SimpleMapsData })\n      .simplemaps_usmap_mapdata;\n    const stateName = simplemapsData?.state_specific[id]?.name;\n\n    if (window.filterByState) {\n      window.filterByState(stateName ?? ''); // Call the global filter function\n    } else {\n      return false;\n    }\n    return true;\n  };\n};\n", "/**\n * List of all US states.\n */\nexport const states = [\n  'Alabama',\n  'Alaska',\n  'Arizona',\n  'Arkansas',\n  'California',\n  'Colorado',\n  'Connecticut',\n  'Delaware',\n  'Florida',\n  'Georgia',\n  'Hawaii',\n  'Idaho',\n  'Illinois',\n  'Indiana',\n  'Iowa',\n  'Kansas',\n  'Kentucky',\n  'Louisiana',\n  'Maine',\n  'Maryland',\n  'Massachusetts',\n  'Michigan',\n  'Minnesota',\n  'Mississippi',\n  'Missouri',\n  'Montana',\n  'Nebraska',\n  'Nevada',\n  'New Hampshire',\n  'New Jersey',\n  'New Mexico',\n  'New York',\n  'North Carolina',\n  'North Dakota',\n  'Ohio',\n  'Oklahoma',\n  'Oregon',\n  'Pennsylvania',\n  'Rhode Island',\n  'South Carolina',\n  'South Dakota',\n  'Tennessee',\n  'Texas',\n  'Utah',\n  'Vermont',\n  'Virginia',\n  'Washington',\n  'West Virginia',\n  'Wisconsin',\n  'Wyoming',\n];\n\n/**\n * Populates a dropdown with US states.\n */\nexport const populateStateDropdown = () => {\n  // Try multiple selectors to find the dropdown\n  const dropdown =\n    document.querySelector('select[data-name=\"State\"]') ||\n    document.querySelector('select#state-dropdown') ||\n    document.querySelector('select.state-dropdown');\n\n  if (dropdown) {\n    // Clear existing options except the first one (if it's a placeholder)\n    while (dropdown.options.length > 1) {\n      dropdown.remove(1);\n    }\n\n    // Add all states\n    states.forEach((state) => {\n      const option = new Option(state, state);\n      dropdown.add(option);\n    });\n  } else {\n    console.warn('State dropdown not found on page');\n  }\n};\n", "import { initializeFinsweetAttributes } from './utils/finsweet';\nimport { initializeSimpleMap } from './utils/simplemap';\nimport { populateStateDropdown } from './utils/states';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // Wait for Webflow to fully load\n  window.addEventListener('load', function () {\n    populateStateDropdown(); // Populate the dropdown with states\n    initializeFinsweetAttributes(); // Initialize Finsweet Attributes\n    initializeSimpleMap(); // Initialize SimpleMap functionality\n  });\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACUtF,MAAM,+BAA+B,MAAM;AAChD,WAAO,mBAAmB,KAAK;AAAA,MAC7B;AAAA,MACA,MAAM;AAEJ,eAAO,gBAAgB,SAAU,YAAoB;AACnD,gBAAM,WAAW,SAAS,cAAc,yBAAyB;AAEjE,cAAI,CAAC,UAAU;AACb;AAAA,UACF;AAGA,mBAAS,QAAQ;AAGjB,mBAAS,cAAc,IAAI,MAAM,SAAS,EAAE,SAAS,KAAK,CAAC,CAAC;AAC5D,mBAAS,cAAc,IAAI,MAAM,UAAU,EAAE,SAAS,KAAK,CAAC,CAAC;AAAA,QAC/D;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;;;ACZO,MAAM,sBAAsB,MAAM;AACvC,qBAAiB,MAAM,uBAAuB,SAAU,IAAY;AAUlE,YAAM,iBAAkB,OACrB;AACH,YAAM,YAAY,gBAAgB,eAAe,EAAE,GAAG;AAEtD,UAAI,OAAO,eAAe;AACxB,eAAO,cAAc,aAAa,EAAE;AAAA,MACtC,OAAO;AACL,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA,EACF;;;ACtCO,MAAM,SAAS;AAAA,IACpwBAAwB,MAAM;AAEzC,UAAM,WACJ,SAAS,cAAc,2BAA2B,KAClD,SAAS,cAAc,uBAAuB,KAC9C,SAAS,cAAc,uBAAuB;AAEhD,QAAI,UAAU;AAEZ,aAAO,SAAS,QAAQ,SAAS,GAAG;AAClC,iBAAS,OAAO,CAAC;AAAA,MACnB;AAGA,aAAO,QAAQ,CAAC,UAAU;AACxB,cAAM,SAAS,IAAI,OAAO,OAAO,KAAK;AACtC,iBAAS,IAAI,MAAM;AAAA,MACrB,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,KAAK,kCAAkC;AAAA,IACjD;AAAA,EACF;;;AC5EA,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AAExB,WAAO,iBAAiB,QAAQ,WAAY;AAC1C,4BAAsB;AACtB,mCAA6B;AAC7B,0BAAoB;AAAA,IACtB,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
